name: PR Coverage Report

on: pull_request

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node modules
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Yarn Install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Run Coverage
        run: yarn test:unit

      # - name: Run Cypress
      #   run: yarn test:e2e -- --headless

      - name: Post Coverage Results into PR
        uses: mattallty/jest-github-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          # this is just an example, this could be any command that will trigger jest
          test-command: "xvfb-run --auto-servernum yarn test:unit"
          # Runs tests related to the changes since the base branch of your pull request
          # Default to false if not set
          changes-only: true
