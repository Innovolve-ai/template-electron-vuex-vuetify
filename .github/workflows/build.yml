name: Build/release

on:
  push:
    branches:
      - '*'

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        # os: [macos-latest, ubuntu-latest, windows-latest]
        os: [ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 14

      # - name: Get yarn cache directory path
      #   id: yarn-cache-dir-path
      #   run: echo "::set-output name=dir::$(yarn cache dir)"

      # - name: Cache node modules
      #   uses: actions/cache@v2
      #   id: yarn-cache
      #   with:
      #     path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-

      - name: Run Install
        # if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: |
          yarn install

      # - name: Setup Xvfb
      #   if: matrix.os == 'ubuntu-latest'
      #   run: |
      #     apt install -y xvfb
      #     export DISPLAY=:99.0
      #     Xvfb &
      #     sleep 3
      #     # Install display server dependencies
      #     apt install xvfb libxtst6 libxss1 libgtk2.0-0 -y"
      #     # Install core libraries for chromium driver
      #     apt install libnss3 libasound2 libgconf-2-4 -y"
      #     export {no_proxy,NO_PROXY}="127.0.0.1,localhost"

      - name: Run Coverage
        run: yarn test:unit

      - name: Push to Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Cypress
        run: yarn test:e2e -- --headless

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          use_vue_cli: true
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
