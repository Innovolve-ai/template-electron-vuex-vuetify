name: Release

on:
  push:
    branches:
      - master
      - main

jobs:
  release:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: ${{ matrix.friendlyName }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node: [14.13.1]
        os: [macos-latest, ubuntu-18.04, windows-latest]
        include:
          - os: ubuntu-18.04
            friendlyName: Release - Ubuntu
          - os: macos-latest
            friendlyName: Release - MacOS
          - os: windows-latest
            friendlyName: Release - Windows
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Run Install
        run: |
          npm install

      - name: Build electron
        run: |
          npm run app:build

      - name: Release files
        uses: meeDamian/github-release@2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: >
            dist_electron/*-mac.zip
            dist_electron/*.AppImage
            dist_electron/*.snap
            dist_electron/*.dmg
            dist_electron/*.dmg.blockmap
            dist_electron/*.exe
            dist_electron/*.exe.blockmap
            dist_electron/latest*.yml

      # - name: Build/release Electron app
      #   uses: samuelmeuli/action-electron-builder@v1
      #   with:
      #     build_script_name: "app:build"
      #     # GitHub token, automatically provided to the action
      #     # (No need to define this secret in the repo settings)
      #     github_token: ${{ secrets.github_token }}

      #     # If the commit is tagged with a version (e.g. "v1.0.0"),
      #     # release the app after building
      #     release: ${{ startsWith(github.ref, 'refs/tags/v') }}
